<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyConfigured" xml:space="preserve">
    <value>REST Foundation has already been configured.</value>
    <comment>REST Foundation has already been configured.</comment>
  </data>
  <data name="DuplicateGlobalBehaviors" xml:space="preserve">
    <value>Multiple global service behaviors of the same type are not allowed.</value>
    <comment>Multiple global service behaviors of the same type are not allowed.</comment>
  </data>
  <data name="FileNameContainsPath" xml:space="preserve">
    <value>Only a file name can be specified. Relative or absolute paths/URLs are not supported.</value>
    <comment>Only a file name can be specified. Relative or absolute paths/URLs are not supported.</comment>
  </data>
  <data name="HttpsRequiredStatusDescription" xml:space="preserve">
    <value>HTTPS required</value>
    <comment>HTTPS required</comment>
  </data>
  <data name="InvalidConnectionTimeout" xml:space="preserve">
    <value>Connection timeout is invalid.</value>
    <comment>Connection timeout is invalid.</comment>
  </data>
  <data name="InvalidIndexFileException" xml:space="preserve">
    <value>Index files can only have .html or .htm extensions.</value>
    <comment>Index files can only have .html or .htm extensions.</comment>
  </data>
  <data name="InvalidSocketTimeout" xml:space="preserve">
    <value>Socket timeout is invalid.</value>
    <comment>Socket timeout is invalid.</comment>
  </data>
  <data name="NonStringOutputType" xml:space="preserve">
    <value>The output type is not a string.</value>
    <comment>The output type is not a string.</comment>
  </data>
  <data name="NullResourceBody" xml:space="preserve">
    <value>Resource body cannot be null.</value>
    <comment>Resource body cannot be null.</comment>
  </data>
  <data name="UnmappedResourceType" xml:space="preserve">
    <value>HTTP resource type provided has not been mapped.</value>
    <comment>HTTP resource type provided has not been mapped.</comment>
  </data>
  <data name="InvalidKey" xml:space="preserve">
    <value>Invalid key provided.</value>
    <comment>Invalid key provided.</comment>
  </data>
  <data name="MissingDefaultConstructor" xml:space="preserve">
    <value>Created type does not have a default constructor.</value>
    <comment>Created type does not have a default constructor.</comment>
  </data>
  <data name="MissingHttpContext" xml:space="preserve">
    <value>No HTTP context was found.</value>
    <comment>No HTTP context was found.</comment>
  </data>
  <data name="MissingPropertyDefinition" xml:space="preserve">
    <value>Properties must have at least 1 property definition.</value>
    <comment>Properties must have at least 1 property definition.</comment>
  </data>
  <data name="NullOrInvalidAcceptedName" xml:space="preserve">
    <value>An accepted name cannot be null or contain a wildcard.</value>
    <comment>An accepted name cannot be null or contain a wildcard.</comment>
  </data>
  <data name="ProxyAlreadyInitialized" xml:space="preserve">
    <value>Service proxy UI is already enabled.</value>
    <comment>Service proxy UI is already enabled.</comment>
  </data>
  <data name="UnsupportedOperation" xml:space="preserve">
    <value>Unsupported operation</value>
    <comment>Unsupported operation</comment>
  </data>
  <data name="InvalidServiceContract" xml:space="preserve">
    <value>Service contract type must be an interface or a concrete class that defines its own contract.</value>
    <comment>Service contract type must be an interface or a concrete class that defines its own contract.</comment>
  </data>
  <data name="InvalidServiceImplementation" xml:space="preserve">
    <value>A service implementation that defines its own contract must be non-abstract and marked with the 'ServiceContract' attribute.</value>
    <comment>A service implementation that defines its own contract must be non-abstract and marked with the 'ServiceContract' attribute.</comment>
  </data>
  <data name="AlreadyMapped" xml:space="preserve">
    <value>The relative URL '{0}' has already been mapped.</value>
    <comment>The relative URL '{0}' has already been mapped.</comment>
  </data>
  <data name="DuplicateAuthenticationBehavior" xml:space="preserve">
    <value>Only a single authentication behavior can be associated with a service method. That includes global behaviors.</value>
    <comment>Only a single authentication behavior can be associated with a service method. That includes global behaviors.</comment>
  </data>
  <data name="DuplicateRouteBehaviors" xml:space="preserve">
    <value>Multiple service behaviors of the same type are not allowed for the same route.</value>
    <comment>Multiple service behaviors of the same type are not allowed for the same route.</comment>
  </data>
  <data name="UnableToInitializeCache" xml:space="preserve">
    <value>Cache could not be initialized.</value>
    <comment>Cache could not be initialized.</comment>
  </data>
  <data name="UnableToLoadIndexPage" xml:space="preserve">
    <value>Index page file could not be loaded. Make sure the specified index file is available and not locked.</value>
    <comment>Index page file could not be loaded. Make sure the specified index file is available and not locked.</comment>
  </data>
  <data name="UnsupportedRequestedFormat" xml:space="preserve">
    <value>The service is configured not to list its contents in the requested format.</value>
    <comment>The service is configured not to list its contents in the requested format.</comment>
  </data>
  <data name="InvalidUpperBoundAddress" xml:space="preserve">
    <value>The upper bound address is from a different family than the lower bound address.</value>
    <comment>The upper bound address is from a different family than the lower bound address.</comment>
  </data>
  <data name="InvalidResourceExampleType" xml:space="preserve">
    <value>A resource example type must be a class implementing the RestFoundation.ServiceProxy.IResourceExample interface.</value>
    <comment>A resource example type must be a class implementing the RestFoundation.ServiceProxy.IResourceExample interface.</comment>
  </data>
  <data name="EmptyFileName" xml:space="preserve">
    <value>File name cannot be empty.</value>
    <comment>File name cannot be empty.</comment>
  </data>
  <data name="InvalidWebResponse" xml:space="preserve">
    <value>Invalid web response provided.</value>
    <comment>Invalid web response provided.</comment>
  </data>
  <data name="ManuallyDefinedOptionsHttpMethod" xml:space="preserve">
    <value>HTTP method OPTIONS cannot be manually defined on a service method.</value>
    <comment>HTTP method OPTIONS cannot be manually defined on a service method.</comment>
  </data>
  <data name="UnsupportedHttpMethod" xml:space="preserve">
    <value>HTTP Method '{0}' is not supported.</value>
    <comment>HTTP Method '{0}' is not supported.</comment>
  </data>
  <data name="MissingAuthorizationManager" xml:space="preserve">
    <value>No authorization manager could be found.</value>
    <comment>No authorization manager could be found.</comment>
  </data>
  <data name="DisallowedHttpMethod" xml:space="preserve">
    <value>HTTP method is not allowed.</value>
    <comment>HTTP method is not allowed.</comment>
  </data>
  <data name="UnsupportedContentCharset" xml:space="preserve">
    <value>The content charset provided is not supported.</value>
    <comment>The content charset provided is not supported.</comment>
  </data>
  <data name="UnsupportedContentLanguage" xml:space="preserve">
    <value>The content language provided is not supported.</value>
    <comment>The content language provided is not supported.</comment>
  </data>
  <data name="NonAcceptedContentCharset" xml:space="preserve">
    <value>No accepted charset was provided in the Accept-Charset header.</value>
    <comment>No accepted charset was provided in the Accept-Charset header.</comment>
  </data>
  <data name="NonAcceptedContentLanguage" xml:space="preserve">
    <value>The accepted language provided in the Accept-Language header is not supported.</value>
    <comment>The accepted language provided in the Accept-Language header is not supported.</comment>
  </data>
  <data name="EmptyHttpHeader" xml:space="preserve">
    <value>HTTP headers cannot be empty or have white-space in the name.</value>
    <comment>HTTP headers cannot be empty or have white-space in the name.</comment>
  </data>
  <data name="MissingOrInvalidContentType" xml:space="preserve">
    <value>No supported media type was provided in the Content-Type header.</value>
    <comment>No supported media type was provided in the Content-Type header.</comment>
  </data>
  <data name="InvalidUploadedFileType" xml:space="preserve">
    <value>The resource type must be IUploadedFile or a collection that implements IEnumerable&lt;IUploadedFile&gt;.</value>
    <comment>The resource type must be IUploadedFile or a collection that implements IEnumerable&lt;IUploadedFile&gt;.</comment>
  </data>
  <data name="InvalidFilePathOrUrl" xml:space="preserve">
    <value>No valid file path/URL provided.</value>
    <comment>No valid file path/URL provided.</comment>
  </data>
  <data name="UnsatisfiableRequestedRange" xml:space="preserve">
    <value>Range not satisfiable.</value>
    <comment>Range not satisfiable.</comment>
  </data>
  <data name="InvalidJsonPCallback" xml:space="preserve">
    <value>Invalid JSONP callback method provided.</value>
    <comment>Invalid JSONP callback method provided.</comment>
  </data>
  <data name="InvalidODataParameters" xml:space="preserve">
    <value>Invalid OData parameters provided.</value>
    <comment>Invalid OData parameters provided.</comment>
  </data>
  <data name="MissingRouteData" xml:space="preserve">
    <value>No route data found.</value>
    <comment>No route data found.</comment>
  </data>
  <data name="MissingRestHttpModule" xml:space="preserve">
    <value>No REST HTTP module detected. Make sure to add a reference to the RestFoundation.RestHttpModule HTTP module in the Web.config file.</value>
    <comment>No REST HTTP module detected. Make sure to add a reference to the RestFoundation.RestHttpModule HTTP module in the Web.config file.</comment>
  </data>
  <data name="ServiceTimedOut" xml:space="preserve">
    <value>Service timed out</value>
    <comment>Service timed out</comment>
  </data>
  <data name="FailedRequest" xml:space="preserve">
    <value>HTTP request failed to process.</value>
    <comment>HTTP request failed to process.</comment>
  </data>
  <data name="InvalidResourceBody" xml:space="preserve">
    <value>Invalid resource body provided.</value>
    <comment>Invalid resource body provided.</comment>
  </data>
  <data name="MismatchedServiceMethod" xml:space="preserve">
    <value>No matching service type or service method was found.</value>
    <comment>No matching service type or service method was found.</comment>
  </data>
  <data name="MissingRouteHandler" xml:space="preserve">
    <value>No route handler was passed to the service method invoker.</value>
    <comment>No route handler was passed to the service method invoker.</comment>
  </data>
  <data name="MissingServiceContext" xml:space="preserve">
    <value>No service context was passed to the service method invoker.</value>
    <comment>No service context was passed to the service method invoker.</comment>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not Found</value>
    <comment>Not Found</comment>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
    <comment>Unauthorized</comment>
  </data>
  <data name="Forbidden" xml:space="preserve">
    <value>Forbidden</value>
    <comment>Forbidden</comment>
  </data>
  <data name="InvalidVirtualUrl" xml:space="preserve">
    <value>Virtual URL must start with ~/</value>
    <comment>Virtual URL must start with ~/</comment>
  </data>
  <data name="InvalidServiceMethodExpression" xml:space="preserve">
    <value>Invalid or mismatched service method lambda expression provided.</value>
    <comment>Invalid or mismatched service method lambda expression provided.</comment>
  </data>
  <data name="InvalidServiceMethod" xml:space="preserve">
    <value>No valid service method provided.</value>
    <comment>No valid service method provided.</comment>
  </data>
  <data name="MismatchedServiceMethodRoute" xml:space="preserve">
    <value>Provided service method delegate does not match the route.</value>
    <comment>Provided service method delegate does not match the route.</comment>
  </data>
  <data name="InvalidHttpMethodForResource" xml:space="preserve">
    <value>A resource cannot be set for the current HTTP method.</value>
    <comment>A resource cannot be set for the current HTTP method.</comment>
  </data>
  <data name="InvalidServiceMethodArgument" xml:space="preserve">
    <value>There was a problem validating service method argument '{0}'.</value>
    <comment>There was a problem validating service method argument '{0}'.</comment>
  </data>
  <data name="MismatchedServiceMethodExpression" xml:space="preserve">
    <value>Service method delegate value of the argument '{0}' does not match the corresponding route value: {1} != {2}.</value>
    <comment>Service method delegate value of the argument '{0}' does not match the corresponding route value: {1} != {2}.</comment>
  </data>
  <data name="ConstraintMismatchedRouteParameter" xml:space="preserve">
    <value>Route parameter '{0}' with value '{1}' does not match the constraint pattern '{2}'.</value>
    <comment>Route parameter '{0}' with value '{1}' does not match the constraint pattern '{2}'.</comment>
  </data>
  <data name="OvercomplicatedMethodArgument" xml:space="preserve">
    <value>Method argument '{0}' has a value that is to complex to process. It must be a simple constant or variable value.</value>
    <comment>Method argument '{0}' has a value that is to complex to process. It must be a simple constant or variable value.</comment>
  </data>
  <data name="MismatchedUrl" xml:space="preserve">
    <value>URL '{0}' does not match any routes.</value>
    <comment>URL '{0}' does not match any routes.</comment>
  </data>
  <data name="DependencyResolutionError" xml:space="preserve">
    <value>There was a problem resolving a service: {0}</value>
    <comment>There was a problem resolving a service: {0}</comment>
  </data>
  <data name="ConfigurationNotInitialized" xml:space="preserve">
    <value>REST Foundation configuration has not been initialized. Make sure to add a call to one of the Initialize methods of the RestFoundation.Rest.Configuration object on the application start.</value>
    <comment>REST Foundation configuration has not been initialized. Make sure to add a call to one of the Initialize methods of the RestFoundation.Rest.Configuration object on the application start.</comment>
  </data>
  <data name="DependencyRegistrationError" xml:space="preserve">
    <value>There was a problem registering a service: {0}</value>
    <comment>There was a problem registering a service: {0}</comment>
  </data>
  <data name="ValidationRequestFailed" xml:space="preserve">
    <value>A potentially dangerous value was found in the HTTP request.</value>
    <comment>A potentially dangerous value was found in the HTTP request.</comment>
  </data>
  <data name="InvalidProxyMetadataType" xml:space="preserve">
    <value>The type '{0}' is not a valid proxy metadata type.</value>
    <comment>The type '{0}' is not a valid proxy metadata type.</comment>
  </data>
  <data name="InvalidMethodParameterName" xml:space="preserve">
    <value>Invalid method parameter name provided.</value>
    <comment>Invalid method parameter name provided.</comment>
  </data>
  <data name="InvalidPortNumber" xml:space="preserve">
    <value>Port must be greater than 0.</value>
    <comment>Port must be greater than 0.</comment>
  </data>
  <data name="MissingCurrentServiceMethod" xml:space="preserve">
    <value>No current service method has been set.</value>
    <comment>No current service method has been set.</comment>
  </data>
  <data name="MissingDescription" xml:space="preserve">
    <value>No description provided</value>
    <comment>No description provided</comment>
  </data>
  <data name="NonAcceptedMediaType" xml:space="preserve">
    <value>Resulting media type is not accepted by the client</value>
    <comment>Resulting media type is not accepted by the client</comment>
  </data>
  <data name="SuccessfulOperation" xml:space="preserve">
    <value>Operation is successful</value>
    <comment>Operation is successful</comment>
  </data>
  <data name="UnsupportedMediaType" xml:space="preserve">
    <value>Media type is not supported</value>
    <comment>Media type is not supported</comment>
  </data>
  <data name="ServiceUnavailable" xml:space="preserve">
    <value>Service is not available</value>
    <comment>Service is not available</comment>
  </data>
  <data name="ServiceCallEnded" xml:space="preserve">
    <value>-- SERVICE CALL ENDED --</value>
    <comment>-- SERVICE CALL ENDED --</comment>
  </data>
  <data name="ServiceCallStarted" xml:space="preserve">
    <value>-- SERVICE CALL STARTED --</value>
    <comment>-- SERVICE CALL STARTED --</comment>
  </data>
  <data name="UnregisteredLogWriter" xml:space="preserve">
    <value>No log writer has been registered.</value>
    <comment>No log writer has been registered.</comment>
  </data>
  <data name="InvalidServiceUrlOrMethodExpression" xml:space="preserve">
    <value>Invalid service URL or method lambda expression provided.</value>
    <comment>Invalid service URL or method lambda expression provided.</comment>
  </data>
  <data name="DisallowedMediaTypeParameters" xml:space="preserve">
    <value>Media type parameters are not allowed.</value>
    <comment>Media type parameters are not allowed.</comment>
  </data>
  <data name="InvalidArgumentValue" xml:space="preserve">
    <value>The argument contains invalid elements.</value>
    <comment>The argument contains invalid elements.</comment>
  </data>
  <data name="UnsealedBehaviorAttributeClass" xml:space="preserve">
    <value>Service method behavior attribute class '{0}' should be sealed for performance benefits.</value>
    <comment>Service method behavior attribute class '{0}' should be sealed for performance benefits.</comment>
  </data>
  <data name="InvalidHashKey" xml:space="preserve">
    <value>Invalid hash key provided.</value>
    <comment>Invalid hash key provided.</comment>
  </data>
  <data name="UnsupportedFromHeaderBinderParameter" xml:space="preserve">
    <value>Array parameters are not supported by the FromHeader type binder.</value>
    <comment>Array parameters are not supported by the FromHeader type binder.</comment>
  </data>
  <data name="MultipleTypeBindersPerParameter" xml:space="preserve">
    <value>Parameter '{0}' of the method '{1}' in the service contract of type '{2}' is decorated with multiple type binder attributes.</value>
    <comment>Parameter '{0}' of the method '{1}' in the service contract of type '{2}' is decorated with multiple type binder attributes.</comment>
  </data>
  <data name="MissingSupportedMediaTypeForFormatter" xml:space="preserve">
    <value>No supported media types are defined for the media type formatter of type '{0}'.</value>
    <comment>No supported media types are defined for the media type formatter of type '{0}'.</comment>
  </data>
  <data name="InvalidResultContentFormat" xml:space="preserve">
    <value>Invalid content result format provided.</value>
    <comment>Invalid content result format provided.</comment>
  </data>
  <data name="UnsupportedObjectTypeForOData" xml:space="preserve">
    <value>OData operations are not supported for anonymous objects.</value>
    <comment>OData operations are not supported for anonymous objects.</comment>
  </data>
  <data name="MissingOrInvalidAcceptType" xml:space="preserve">
    <value>No supported media type was provided in the Accept header.</value>
    <comment>No supported media type was provided in the Accept header.</comment>
  </data>
  <data name="MissingAmbiguousServiceUrl" xml:space="preserve">
    <value>An ambiguous route match was found for the service method. A specific 'serviceUrl' parameter must be specified.</value>
    <comment>An ambiguous route match was found for the service method. A specific 'serviceUrl' parameter must be specified.</comment>
  </data>
  <data name="UndeterminedUriHostName" xml:space="preserve">
    <value>Could not determine the URI host name.</value>
    <comment>Could not determine the URI host name.</comment>
  </data>
  <data name="InvalidServiceContractType" xml:space="preserve">
    <value>Type '{0}' is not a service contract.</value>
    <comment>Type '{0}' is not a service contract.</comment>
  </data>
  <data name="ResourceValidationFailed" xml:space="preserve">
    <value>Validation Failed</value>
    <comment>Validation Failed</comment>
  </data>
  <data name="AlreadyInitializedHttpContext" xml:space="preserve">
    <value>HTTP context has already been initialized.</value>
    <comment>HTTP context has already been initialized.</comment>
  </data>
  <data name="NonErrorHttpStatusCode" xml:space="preserve">
    <value>The HTTP status code is not an error code.</value>
    <comment>The HTTP status code is not an error code.</comment>
  </data>
  <data name="UnsupportedFormData" xml:space="preserve">
    <value>The current service method does not support HTTP body form data.</value>
    <comment>The current service method does not support HTTP body form data.</comment>
  </data>
  <data name="MissingJavaScriptResource" xml:space="preserve">
    <value>JavaScript resource not found.</value>
    <comment>JavaScript resource not found.</comment>
  </data>
  <data name="MissingCssResource" xml:space="preserve">
    <value>CSS resource not found.</value>
    <comment>CSS resource not found.</comment>
  </data>
  <data name="InvalidNamedRoute" xml:space="preserve">
    <value>Invalid route '{0}' specified.</value>
    <comment>Invalid route '{0}' specified.</comment>
  </data>
  <data name="InvalidServiceName" xml:space="preserve">
    <value>Invalid relative service URL name '{0}' provided. It can only contain letters, digits, underscores and dashes.</value>
    <comment>Invalid relative service URL name '{0}' provided. It can only contain letters, digits, underscores and dashes.</comment>
  </data>
  <data name="InvalidCatchAllUrlTemplate" xml:space="preserve">
    <value>URL templates cannot contain catch-all parameters. Template: '{0}'</value>
    <comment>URL templates cannot contain catch-all parameters. Template: '{0}'</comment>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Internal Server Error</value>
    <comment>Internal Server Error</comment>
  </data>
  <data name="TooManyRequests" xml:space="preserve">
    <value>Too many requests</value>
    <comment>Too many requests</comment>
  </data>
  <data name="UnsupportedSyncExecutionForAsyncResult" xml:space="preserve">
    <value>Asyncronous service method results must be executed by calling the ExecuteAsync(context) method.</value>
    <comment>Asyncronous service method results must be executed by calling the ExecuteAsync(context) method.</comment>
  </data>
  <data name="InvalidIAsyncResultReturned" xml:space="preserve">
    <value>An unsupported asynchronous result was returned from the service method. Only objects of Task and Task&lt;T&gt; types are supported. Nested generic tasks are not supported.</value>
    <comment>An unsupported asynchronous result was returned from the service method. Only objects of Task and Task&lt;T&gt; types are supported. Nested generic tasks are not supported.</comment>
  </data>
  <data name="NoContent" xml:space="preserve">
    <value>No Content</value>
    <comment>No Content</comment>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
    <comment>OK</comment>
  </data>
  <data name="UndefinedHttpMethodsForServiceMethod" xml:space="preserve">
    <value>Method '{0}' of the service contract type '{1}' does not have any HTTP methods defined in the UrlAttribute declaration.</value>
    <comment>Method '{0}' of the service contract type '{1}' does not have any HTTP methods defined in the UrlAttribute declaration.</comment>
  </data>
  <data name="UndeterminedServiceContract" xml:space="preserve">
    <value>Service contract of type '{0}' could not be determined.</value>
    <comment>Service contract of type '{0}' could not be determined.</comment>
  </data>
  <data name="UndefinedServiceMethodUrl" xml:space="preserve">
    <value>Service with contract of type '{0}' could not match the URL with a method.</value>
    <comment>Service with contract of type '{0}' could not match the URL with a method.</comment>
  </data>
  <data name="UnableToCreateServiceType" xml:space="preserve">
    <value>Service with contract of type '{0}' could not be created.</value>
    <comment>Service with contract of type '{0}' could not be created.</comment>
  </data>
  <data name="ValidationFailed" xml:space="preserve">
    <value>Validation for '{0}' failed.</value>
    <comment>Validation for '{0}' failed.</comment>
  </data>
  <data name="NoResourceProvided" xml:space="preserve">
    <value>No resource provided</value>
    <comment>No resource provided</comment>
  </data>
  <data name="PartialContent" xml:space="preserve">
    <value>Partial Content</value>
    <comment>Partial Content</comment>
  </data>
  <data name="InvalidMethodInvocationTaskState" xml:space="preserve">
    <value>The task returned by the IServiceMethodInvoker must be in the 'Created' state. It cannot be started.</value>
    <comment>The task returned by the IServiceMethodInvoker must be in the 'Created' state. It cannot be started.</comment>
  </data>
  <data name="InvalidAsyncTimeout" xml:space="preserve">
    <value>Invalid service async timeout value provided.</value>
    <comment>Invalid service async timeout value provided.</comment>
  </data>
  <data name="UnsupportedLogWriterAsyncFlush" xml:space="preserve">
    <value>The current log writer does not support asynchronous flushes.</value>
    <comment>The current log writer does not support asynchronous flushes.</comment>
  </data>
  <data name="InvalidServiceProxyRelativeUrl" xml:space="preserve">
    <value>Service help/proxy relative URL can only contain letters and numbers with optional dashes in between. Relative URL '{0}' does not meet those requirements.</value>
    <comment>Service help/proxy relative URL can only contain letters and numbers with optional dashes in between. Relative URL '{0}' does not meet those requirements.</comment>
  </data>
  <data name="InvalidAcceptHeaderFormat" xml:space="preserve">
    <value>One of the Accept* HTTP headers has an invalid format.</value>
    <comment>One of the Accept* HTTP headers has an invalid format.</comment>
  </data>
  <data name="InvalidAcceptHeaderValue" xml:space="preserve">
    <value>Invalid '{0}' header value to parse.</value>
    <comment>Invalid '{0}' header value to parse.</comment>
  </data>
  <data name="InvalidBrewOperation" xml:space="preserve">
    <value>I'm a teapot</value>
    <comment>I'm a teapot</comment>
  </data>
  <data name="NonGenericResultCollections" xml:space="preserve">
    <value>Non-generic collections cannot be returned as service method results. Return typed arrays (recommended) or generic collections instead.</value>
    <comment>Non-generic collections cannot be returned as service method results. Return typed arrays (recommended) or generic collections instead.</comment>
  </data>
  <data name="NotImplemented" xml:space="preserve">
    <value>Not Implemented</value>
    <comment>Not Implemented</comment>
  </data>
  <data name="FailedRouteInvokedSuccessfully" xml:space="preserve">
    <value>REST Foundation service route was invoked successfully when it should have failed.</value>
    <comment>REST Foundation service route was invoked successfully when it should have failed.</comment>
  </data>
  <data name="FailedRouteWithInvalidExceptionMessage" xml:space="preserve">
    <value>REST Foundation service route invocation failed with the exception message "{0}". Exception message "{1}" was expected.</value>
    <comment>REST Foundation service route invocation failed with the exception message "{0}". Exception message "{1}" was expected.</comment>
  </data>
</root>